name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Get version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release version: $VERSION"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Run tests
        run: npm test -- --run

      - name: Run full validation
        run: npm run validate:full

  build-release:
    name: Build Release
    needs: validate-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all targets
        run: |
          npm run build
          npm run build:minimal
          npm run build:core

      - name: Create tarball
        run: |
          tar -czf trilium-cli-${{ needs.validate-release.outputs.version }}-node${{ matrix.node-version }}.tar.gz \
            dist/ \
            dist-core/ \
            package.json \
            package-lock.json \
            README.md \
            LICENSE || true

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-node${{ matrix.node-version }}
          path: trilium-cli-*.tar.gz
          retention-days: 7

  create-github-release:
    name: Create GitHub Release
    needs: [validate-release, build-release]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release Notes
        id: release_notes
        run: |
          VERSION=${{ needs.validate-release.outputs.version }}
          echo "# Release v$VERSION" > release_notes.md
          echo "" >> release_notes.md
          echo "## What's Changed" >> release_notes.md
          echo "" >> release_notes.md
          
          # Try to get commit messages since last tag
          if git describe --tags --abbrev=0 HEAD^ 2>/dev/null; then
            LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)
            git log $LAST_TAG..HEAD --pretty=format:"- %s" >> release_notes.md
          else
            echo "Initial release" >> release_notes.md
          fi
          
          echo "" >> release_notes.md
          echo "## Installation" >> release_notes.md
          echo "" >> release_notes.md
          echo '```bash' >> release_notes.md
          echo "npm install -g trilium-cli-ts@$VERSION" >> release_notes.md
          echo '```' >> release_notes.md
          echo "" >> release_notes.md
          echo "## Assets" >> release_notes.md
          echo "- Node.js 18.x build" >> release_notes.md
          echo "- Node.js 20.x build" >> release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.validate-release.outputs.version }}
          name: Release v${{ needs.validate-release.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(needs.validate-release.outputs.version, '-') }}
          files: |
            artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    name: Publish to NPM
    needs: [validate-release, build-release]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build for production
        run: |
          npm run clean
          npm run build
          npm run build:minimal
          npm run build:core

      - name: Update package version
        run: |
          VERSION=${{ needs.validate-release.outputs.version }}
          npm version $VERSION --no-git-tag-version

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to GitHub Packages
        run: |
          npm config set @${{ github.repository_owner }}:registry https://npm.pkg.github.com
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}